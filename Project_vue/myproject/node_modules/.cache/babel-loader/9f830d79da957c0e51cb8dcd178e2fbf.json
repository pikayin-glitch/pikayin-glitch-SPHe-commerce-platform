{"ast":null,"code":"import _objectSpread from \"C:/Users/\\u5C39\\u6728\\u661F\\u8FB0/Desktop/Vue_project/Project_vue/myproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.search.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchSelector from \"./SearchSelector/SearchSelector\";\nimport { mapGetters, mapState } from \"vuex\";\nexport default {\n  name: \"Search\",\n  data: function data() {\n    return {\n      searchParams: {\n        //产品相应的id\n        category1Id: \"\",\n        category2Id: \"\",\n        category3Id: \"\",\n        //产品的名字\n        categoryName: \"\",\n        //搜索的关键字\n        keyword: \"\",\n        //排序:初始状态应该是综合且降序\n        order: \"1:desc\",\n        //第几页\n        pageNo: 1,\n        //每一页展示条数\n        pageSize: 3,\n        //平台属性的操作\n        props: [],\n        //品牌\n        trademark: \"\"\n      }\n    };\n  },\n  components: {\n    SearchSelector: SearchSelector\n  },\n  //在挂载之前调用一次|可以在发请求之前将带有参数进行修改\n  beforeMount: function beforeMount() {\n    //在发请求之前，把接口需要传递参数，进行整理（在给服务器发请求之前，把参数整理好，服务器就会返回查询的数据）\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n  mounted: function mounted() {\n    //在发请求之前咱们需要将searchParams里面参数进行修改带给服务器\n    this.getData();\n  },\n  methods: {\n    //把发请求的这个action封装到一个函数里面\n    //将来需要再次发请求，你只需要在调用这个函数即可\n    getData: function getData() {\n      this.$store.dispatch(\"getSearchList\", this.searchParams);\n    },\n    //删除分类的名字\n    removeCategoryName: function removeCategoryName() {\n      //把带给服务器的参数置空了，还需要向服务器发请求\n      //带给服务器参数说明可有可无的：如果属性值为空的字符串还是会把相应的字段带给服务器\n      //但是你把相应的字段变为undefined，当前这个字段不会带给服务器\n      this.searchParams.categoryName = undefined;\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n      this.getData(); //地址栏也需要需改：进行路由跳转(现在的路由跳转只是跳转到自己这里)\n      //严谨：本意是删除query，如果路径当中出现params不应该删除，路由跳转的时候应该带着\n\n      if (this.$route.params) {\n        this.$router.push({\n          name: \"search\",\n          params: this.$route.params\n        });\n      }\n    },\n    //删除关键字\n    removeKeyword: function removeKeyword() {\n      //给服务器带的参数searchParams的keyword置空\n      this.searchParams.keyword = undefined; //再次发请求\n\n      this.getData(); //通知兄弟组件Header清除关键字\n\n      this.$bus.$emit(\"clear\"); //进行路由的跳转\n\n      if (this.$route.query) {\n        this.$router.push({\n          name: \"search\",\n          query: this.$route.query\n        });\n      }\n    },\n    //自定义事件回调\n    trademarkInfo: function trademarkInfo(trademark) {\n      //1:整理品牌字段的参数  \"ID:品牌名称\"\n      this.searchParams.trademark = \"\".concat(trademark.tmId, \":\").concat(trademark.tmName); //再次发请求获取search模块列表数据进行展示\n\n      this.getData();\n    },\n    //删除品牌的信息\n    removeTradeMark: function removeTradeMark() {\n      //将品牌信息置空\n      this.searchParams.trademark = undefined; //再次发请求\n\n      this.getData();\n    },\n    //收集平台属性地方回调函数（自定义事件）\n    attrInfo: function attrInfo(attr, attrValue) {\n      //[\"属性ID:属性值:属性名\"]\n      console.log(attr, attrValue); //参数格式整理好\n\n      var props = \"\".concat(attr.attrId, \":\").concat(attrValue, \":\").concat(attr.attrName); //数组去重\n      //if语句里面只有一行代码：可以省略大花括号\n\n      if (this.searchParams.props.indexOf(props) == -1) this.searchParams.props.push(props); //再次发请求\n\n      this.getData();\n    },\n    //removeAttr删除售卖的属性\n    removeAttr: function removeAttr(index) {\n      //再次整理参数\n      this.searchParams.props.splice(index, 1); //再次发请求\n\n      this.getData();\n    },\n    //排序的操作\n    changeOrder: function changeOrder(flag) {\n      //flag:用户每一次点击li标签的时候，用于区分是综合（1）还是价格（2）\n      //现获取order初始状态【咱们需要通过初始状态去判断接下来做什么】\n      var originOrder = this.searchParams.order;\n      var orginsFlag = originOrder.split(\":\")[0];\n      var originSort = originOrder.split(\":\")[1]; //新的排序方式\n\n      var newOrder = \"\"; //判断的是多次点击的是不是同一个按钮\n\n      if (flag == orginsFlag) {\n        newOrder = \"\".concat(orginsFlag, \":\").concat(originSort == \"desc\" ? \"asc\" : \"desc\");\n      } else {\n        //点击不是同一个按钮\n        newOrder = \"\".concat(flag, \":\", \"desc\");\n      } //需要给order重新赋值\n\n\n      this.searchParams.order = newOrder; //再次发请求\n\n      this.getData();\n    },\n    //自定义事件的回调函数---获取当前第几页\n    getPageNo: function getPageNo(pageNo) {\n      //整理带给服务器参数\n      this.searchParams.pageNo = pageNo; //再次发请求\n\n      this.getData();\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"goodsList\"])), {}, {\n    isOne: function isOne() {\n      return this.searchParams.order.indexOf(\"1\") != -1;\n    },\n    isTwo: function isTwo() {\n      return this.searchParams.order.indexOf(\"2\") != -1;\n    },\n    isAsc: function isAsc() {\n      return this.searchParams.order.indexOf(\"asc\") != -1;\n    },\n    isDesc: function isDesc() {\n      return this.searchParams.order.indexOf(\"desc\") != -1;\n    }\n  }, mapState({\n    total: function total(state) {\n      return state.search.searchList.total;\n    }\n  })),\n  //数据监听：监听组件实例身上的属性的属性值变化\n  watch: {\n    //监听路由的信息是否发生变化，如果发生变化，再次发起请求\n    $route: function $route(newValue, oldValue) {\n      //每一次请求完毕，应该把相应的1、2、3级分类的id置空的，让他接受下一次的相应1、2、3\n      //再次发请求之前整理带给服务器参数\n      Object.assign(this.searchParams, this.$route.query, this.$route.params); //再次发起ajax请求\n\n      this.getData(); //分类名字与关键字不用清理：因为每一次路由发生变化的时候，都会给他赋予新的数据\n\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AACA;AACAC,uBAFA;AAGAC,uBAHA;AAIAC,uBAJA;AAKA;AACAC,wBANA;AAOA;AACAC,mBARA;AASA;AACAC,uBAVA;AAWA;AACAC,iBAZA;AAaA;AACAC,mBAdA;AAeA;AACAC,iBAhBA;AAiBA;AACAC;AAlBA;AADA;AAsBA,GAzBA;AA0BAC;AACAC;AADA,GA1BA;AA6BA;AACAC,aA9BA,yBA8BA;AACA;AACAC;AACA,GAjCA;AAkCAC,SAlCA,qBAkCA;AACA;AACA;AACA,GArCA;AAsCAC;AACA;AACA;AACAC,WAHA,qBAGA;AACA;AACA,KALA;AAMA;AACAC,sBAPA,gCAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBARA,CASA;AACA;;AACA;AACA;AAAApB;AAAAqB;AAAA;AACA;AACA,KArBA;AAsBA;AACAC,iBAvBA,2BAuBA;AACA;AACA,4CAFA,CAGA;;AACA,qBAJA,CAKA;;AACA,+BANA,CAOA;;AACA;AACA;AAAAtB;AAAAuB;AAAA;AACA;AACA,KAlCA;AAmCA;AACAC,iBApCA,yBAoCAZ,SApCA,EAoCA;AACA;AACA,4FAFA,CAGA;;AACA;AACA,KAzCA;AA0CA;AACAa,mBA3CA,6BA2CA;AACA;AACA,8CAFA,CAGA;;AACA;AACA,KAhDA;AAiDA;AACAC,YAlDA,oBAkDAC,IAlDA,EAkDAC,SAlDA,EAkDA;AACA;AACAC,mCAFA,CAGA;;AACA,2FAJA,CAKA;AACA;;AACA,wDACA,oCARA,CASA;;AACA;AACA,KA7DA;AA8DA;AACAC,cA/DA,sBA+DAC,KA/DA,EA+DA;AACA;AACA,+CAFA,CAGA;;AACA;AACA,KApEA;AAqEA;AACAC,eAtEA,uBAsEAC,IAtEA,EAsEA;AACA;AACA;AACA;AACA;AACA,iDALA,CAMA;;AACA,wBAPA,CAQA;;AACA;AACAC;AACA,OAFA,MAEA;AACA;AACAA;AACA,OAdA,CAeA;;;AACA,yCAhBA,CAiBA;;AACA;AACA,KAzFA;AA0FA;AACAC,aA3FA,qBA2FA1B,MA3FA,EA2FA;AACA;AACA,wCAFA,CAGA;;AACA;AACA;AAhGA,GAtCA;AAwIA2B,4CAEAC,yBAFA;AAGAC,SAHA,mBAGA;AACA;AACA,KALA;AAMAC,SANA,mBAMA;AACA;AACA,KARA;AASAC,SATA,mBASA;AACA;AACA,KAXA;AAYAC,UAZA,oBAYA;AACA;AACA;AAdA,KAgBAC;AACAC;AAAA;AAAA;AADA,IAhBA,CAxIA;AA4JA;AACAC;AACA;AACAC,UAFA,kBAEAC,QAFA,EAEAC,QAFA,EAEA;AACA;AACA;AACA/B,8EAHA,CAIA;;AACA,qBALA,CAMA;;AACA;AACA;AACA;AACA;AAZA;AA7JA","names":["name","data","searchParams","category1Id","category2Id","category3Id","categoryName","keyword","order","pageNo","pageSize","props","trademark","components","SearchSelector","beforeMount","Object","mounted","methods","getData","removeCategoryName","params","removeKeyword","query","trademarkInfo","removeTradeMark","attrInfo","attr","attrValue","console","removeAttr","index","changeOrder","flag","newOrder","getPageNo","computed","mapGetters","isOne","isTwo","isAsc","isDesc","mapState","total","watch","$route","newValue","oldValue"],"sourceRoot":"src/pages/Search","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 商品分类三级列表 -->\n    <typeNav />\n    <div class=\"main\">\n      <div class=\"py-container\">\n        <!--bread:面包屑，带有x的结构的-->\n        <div class=\"bread\">\n          <ul class=\"fl sui-breadcrumb\">\n            <li>\n              <a href=\"#\">全部结果</a>\n            </li>\n          </ul>\n          <ul class=\"fl sui-tag\">\n            <!-- 分类的面包屑 -->\n            <li class=\"with-x\" v-if=\"searchParams.categoryName\">\n              {{ searchParams.categoryName\n              }}<i @click=\"removeCategoryName\">×</i>\n            </li>\n            <!-- 关键字的面包屑 -->\n            <li class=\"with-x\" v-if=\"searchParams.keyword\">\n              {{ searchParams.keyword }}<i @click=\"removeKeyword\">×</i>\n            </li>\n            <!-- 品牌的面包屑 -->\n            <li class=\"with-x\" v-if=\"searchParams.trademark\">\n              {{ searchParams.trademark.split(\":\")[1]\n              }}<i @click=\"removeTradeMark\">×</i>\n            </li>\n            <!--平台的售卖的属性值展示 -->\n            <li\n              class=\"with-x\"\n              v-for=\"(attrValue, index) in searchParams.props\"\n              :key=\"index\"\n            >\n              {{ attrValue.split(\":\")[1] }}<i @click=\"removeAttr(index)\">×</i>\n            </li>\n          </ul>\n        </div>\n        <!--selector-->\n        <SearchSelector @trademarkInfo=\"trademarkInfo\" @attrInfo=\"attrInfo\" />\n        <!--details-->\n        <div class=\"details clearfix\">\n          <div class=\"sui-navbar\">\n            <div class=\"navbar-inner filter\">\n              <!-- 排序的解构 -->\n              <ul class=\"sui-nav\">\n                <li :class=\"{ active: isOne }\" @click=\"changeOrder('1')\">\n                  <a\n                    >综合<span\n                      v-show=\"isOne\"\n                      class=\"iconfont\"\n                      :class=\"{ 'icon-UP': isAsc, 'icon-DOWN': isDesc }\"\n                    ></span\n                  ></a>\n                </li>\n                <li :class=\"{ active: isTwo }\" @click=\"changeOrder('2')\">\n                  <a\n                    >价格<span\n                      v-show=\"isTwo\"\n                      class=\"iconfont\"\n                      :class=\"{ 'icon-UP': isAsc, 'icon-DOWN': isDesc }\"\n                    ></span\n                  ></a>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <!-- 销售产品列表 -->\n          <div class=\"goods-list\">\n            <ul class=\"yui3-g\">\n              <li\n                class=\"yui3-u-1-5\"\n                v-for=\"(good, index) in goodsList\"\n                :key=\"good.id\"\n              >\n                <div class=\"list-wrap\">\n                  <div class=\"p-img\">\n                    <!-- 在路由跳转的时候切记别忘记带id（params）参数 -->\n                    <router-link :to=\"`/detail/${good.id}`\">\n                      <img v-lazy=\"good.defaultImg\" />\n                    </router-link>\n                  </div>\n                  <div class=\"price\">\n                    <strong>\n                      <em>¥</em>\n                      <i>{{ good.price }}.00</i>\n                    </strong>\n                  </div>\n                  <div class=\"attr\">\n                    <a\n                      target=\"_blank\"\n                      href=\"item.html\"\n                      title=\"促销信息，下单即赠送三个月CIBN视频会员卡！【小米电视新品4A 58 火爆预约中】\"\n                      >{{ good.title }}</a\n                    >\n                  </div>\n                  <div class=\"commit\">\n                    <i class=\"command\">已有<span>2000</span>人评价</i>\n                  </div>\n                  <div class=\"operate\">\n                    <a\n                      href=\"success-cart.html\"\n                      target=\"_blank\"\n                      class=\"sui-btn btn-bordered btn-danger\"\n                      >加入购物车</a\n                    >\n                    <a href=\"javascript:void(0);\" class=\"sui-btn btn-bordered\"\n                      >收藏</a\n                    >\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <!-- <Pagination  :pageNo=\"31\"  :pageSize=\"3\" :total=\"99\" :continues=\"5\" @getPageNo=\"getPageNo\"/> -->\n          <!-- 分页器:测试分页器阶段，这里数据将来需要替换的-->\n          <Pagination\n            :pageNo=\"searchParams.pageNo\"\n            :pageSize=\"searchParams.pageSize\"\n            :total=\"total\"\n            :continues=\"5\"\n            @getPageNo=\"getPageNo\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SearchSelector from \"./SearchSelector/SearchSelector\";\nimport { mapGetters, mapState } from \"vuex\";\nexport default {\n  name: \"Search\",\n  data() {\n    return {\n      searchParams: {\n        //产品相应的id\n        category1Id: \"\",\n        category2Id: \"\",\n        category3Id: \"\",\n        //产品的名字\n        categoryName: \"\",\n        //搜索的关键字\n        keyword: \"\",\n        //排序:初始状态应该是综合且降序\n        order: \"1:desc\",\n        //第几页\n        pageNo: 1,\n        //每一页展示条数\n        pageSize: 3,\n        //平台属性的操作\n        props: [],\n        //品牌\n        trademark: \"\",\n      },\n    };\n  },\n  components: {\n    SearchSelector,\n  },\n  //在挂载之前调用一次|可以在发请求之前将带有参数进行修改\n  beforeMount() {\n    //在发请求之前，把接口需要传递参数，进行整理（在给服务器发请求之前，把参数整理好，服务器就会返回查询的数据）\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n  mounted() {\n    //在发请求之前咱们需要将searchParams里面参数进行修改带给服务器\n    this.getData();\n  },\n  methods: {\n    //把发请求的这个action封装到一个函数里面\n    //将来需要再次发请求，你只需要在调用这个函数即可\n    getData() {\n      this.$store.dispatch(\"getSearchList\", this.searchParams);\n    },\n    //删除分类的名字\n    removeCategoryName() {\n      //把带给服务器的参数置空了，还需要向服务器发请求\n      //带给服务器参数说明可有可无的：如果属性值为空的字符串还是会把相应的字段带给服务器\n      //但是你把相应的字段变为undefined，当前这个字段不会带给服务器\n      this.searchParams.categoryName = undefined;\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n      this.getData();\n      //地址栏也需要需改：进行路由跳转(现在的路由跳转只是跳转到自己这里)\n      //严谨：本意是删除query，如果路径当中出现params不应该删除，路由跳转的时候应该带着\n      if (this.$route.params) {\n        this.$router.push({ name: \"search\", params: this.$route.params });\n      }\n    },\n    //删除关键字\n    removeKeyword() {\n      //给服务器带的参数searchParams的keyword置空\n      this.searchParams.keyword = undefined;\n      //再次发请求\n      this.getData();\n      //通知兄弟组件Header清除关键字\n      this.$bus.$emit(\"clear\");\n      //进行路由的跳转\n      if (this.$route.query) {\n        this.$router.push({ name: \"search\", query: this.$route.query });\n      }\n    },\n    //自定义事件回调\n    trademarkInfo(trademark) {\n      //1:整理品牌字段的参数  \"ID:品牌名称\"\n      this.searchParams.trademark = `${trademark.tmId}:${trademark.tmName}`;\n      //再次发请求获取search模块列表数据进行展示\n      this.getData();\n    },\n    //删除品牌的信息\n    removeTradeMark() {\n      //将品牌信息置空\n      this.searchParams.trademark = undefined;\n      //再次发请求\n      this.getData();\n    },\n    //收集平台属性地方回调函数（自定义事件）\n    attrInfo(attr, attrValue) {\n      //[\"属性ID:属性值:属性名\"]\n      console.log(attr, attrValue);\n      //参数格式整理好\n      let props = `${attr.attrId}:${attrValue}:${attr.attrName}`;\n      //数组去重\n      //if语句里面只有一行代码：可以省略大花括号\n      if (this.searchParams.props.indexOf(props) == -1)\n        this.searchParams.props.push(props);\n      //再次发请求\n      this.getData();\n    },\n    //removeAttr删除售卖的属性\n    removeAttr(index) {\n      //再次整理参数\n      this.searchParams.props.splice(index, 1);\n      //再次发请求\n      this.getData();\n    },\n    //排序的操作\n    changeOrder(flag) {\n      //flag:用户每一次点击li标签的时候，用于区分是综合（1）还是价格（2）\n      //现获取order初始状态【咱们需要通过初始状态去判断接下来做什么】\n      let originOrder = this.searchParams.order;\n      let orginsFlag = originOrder.split(\":\")[0];\n      let originSort = originOrder.split(\":\")[1];\n      //新的排序方式\n      let newOrder = \"\";\n      //判断的是多次点击的是不是同一个按钮\n      if (flag == orginsFlag) {\n        newOrder = `${orginsFlag}:${originSort == \"desc\" ? \"asc\" : \"desc\"}`;\n      } else {\n        //点击不是同一个按钮\n        newOrder = `${flag}:${\"desc\"}`;\n      }\n      //需要给order重新赋值\n      this.searchParams.order = newOrder;\n      //再次发请求\n      this.getData();\n    },\n    //自定义事件的回调函数---获取当前第几页\n    getPageNo(pageNo) {\n      //整理带给服务器参数\n      this.searchParams.pageNo = pageNo;\n      //再次发请求\n      this.getData();\n    },\n  },\n  computed: {\n    //mapGetters里面的写法：传递的数组，因为getters计算是没有划分模块【home,search】\n    ...mapGetters([\"goodsList\"]),\n    isOne() {\n      return this.searchParams.order.indexOf(\"1\") != -1;\n    },\n    isTwo() {\n      return this.searchParams.order.indexOf(\"2\") != -1;\n    },\n    isAsc() {\n      return this.searchParams.order.indexOf(\"asc\") != -1;\n    },\n    isDesc() {\n      return this.searchParams.order.indexOf(\"desc\") != -1;\n    },\n    //获取search模块展示产品一共多少数据\n    ...mapState({\n      total: (state) => state.search.searchList.total,\n    }),\n  },\n  //数据监听：监听组件实例身上的属性的属性值变化\n  watch: {\n    //监听路由的信息是否发生变化，如果发生变化，再次发起请求\n    $route(newValue, oldValue) {\n      //每一次请求完毕，应该把相应的1、2、3级分类的id置空的，让他接受下一次的相应1、2、3\n      //再次发请求之前整理带给服务器参数\n      Object.assign(this.searchParams, this.$route.query, this.$route.params);\n      //再次发起ajax请求\n      this.getData();\n      //分类名字与关键字不用清理：因为每一次路由发生变化的时候，都会给他赋予新的数据\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.main {\n  margin: 10px 0;\n\n  .py-container {\n    width: 1200px;\n    margin: 0 auto;\n\n    .bread {\n      margin-bottom: 5px;\n      overflow: hidden;\n\n      .sui-breadcrumb {\n        padding: 3px 15px;\n        margin: 0;\n        font-weight: 400;\n        border-radius: 3px;\n        float: left;\n\n        li {\n          display: inline-block;\n          line-height: 18px;\n\n          a {\n            color: #666;\n            text-decoration: none;\n\n            &:hover {\n              color: #4cb9fc;\n            }\n          }\n        }\n      }\n\n      .sui-tag {\n        margin-top: -5px;\n        list-style: none;\n        font-size: 0;\n        line-height: 0;\n        padding: 5px 0 0;\n        margin-bottom: 18px;\n        float: left;\n\n        .with-x {\n          font-size: 12px;\n          margin: 0 5px 5px 0;\n          display: inline-block;\n          overflow: hidden;\n          color: #000;\n          background: #f7f7f7;\n          padding: 0 7px;\n          height: 20px;\n          line-height: 20px;\n          border: 1px solid #dedede;\n          white-space: nowrap;\n          transition: color 400ms;\n          cursor: pointer;\n\n          i {\n            margin-left: 10px;\n            cursor: pointer;\n            font: 400 14px tahoma;\n            display: inline-block;\n            height: 100%;\n            vertical-align: middle;\n          }\n\n          &:hover {\n            color: #28a3ef;\n          }\n        }\n      }\n    }\n\n    .details {\n      margin-bottom: 5px;\n\n      .sui-navbar {\n        overflow: visible;\n        margin-bottom: 0;\n\n        .filter {\n          min-height: 40px;\n          padding-right: 20px;\n          background: #fbfbfb;\n          border: 1px solid #e2e2e2;\n          padding-left: 0;\n          border-radius: 0;\n          box-shadow: 0 1px 4px rgba(0, 0, 0, 0.065);\n\n          .sui-nav {\n            position: relative;\n            left: 0;\n            display: block;\n            float: left;\n            margin: 0 10px 0 0;\n\n            li {\n              float: left;\n              line-height: 18px;\n\n              a {\n                display: block;\n                cursor: pointer;\n                padding: 11px 15px;\n                color: #777;\n                text-decoration: none;\n              }\n\n              &.active {\n                a {\n                  background: #e1251b;\n                  color: #fff;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      .goods-list {\n        margin: 20px 0;\n\n        ul {\n          display: flex;\n          flex-wrap: wrap;\n\n          li {\n            height: 100%;\n            width: 20%;\n            margin-top: 10px;\n            line-height: 28px;\n\n            .list-wrap {\n              .p-img {\n                padding-left: 15px;\n                width: 215px;\n                height: 255px;\n\n                a {\n                  color: #666;\n\n                  img {\n                    max-width: 100%;\n                    height: auto;\n                    vertical-align: middle;\n                  }\n                }\n              }\n\n              .price {\n                padding-left: 15px;\n                font-size: 18px;\n                color: #c81623;\n\n                strong {\n                  font-weight: 700;\n\n                  i {\n                    margin-left: -5px;\n                  }\n                }\n              }\n\n              .attr {\n                padding-left: 15px;\n                width: 85%;\n                overflow: hidden;\n                margin-bottom: 8px;\n                min-height: 38px;\n                cursor: pointer;\n                line-height: 1.8;\n                display: -webkit-box;\n                -webkit-box-orient: vertical;\n                -webkit-line-clamp: 2;\n\n                a {\n                  color: #333;\n                  text-decoration: none;\n                }\n              }\n\n              .commit {\n                padding-left: 15px;\n                height: 22px;\n                font-size: 13px;\n                color: #a7a7a7;\n\n                span {\n                  font-weight: 700;\n                  color: #646fb0;\n                }\n              }\n\n              .operate {\n                padding: 12px 15px;\n\n                .sui-btn {\n                  display: inline-block;\n                  padding: 2px 14px;\n                  box-sizing: border-box;\n                  margin-bottom: 0;\n                  font-size: 12px;\n                  line-height: 18px;\n                  text-align: center;\n                  vertical-align: middle;\n                  cursor: pointer;\n                  border-radius: 0;\n                  background-color: transparent;\n                  margin-right: 15px;\n                }\n\n                .btn-bordered {\n                  min-width: 85px;\n                  background-color: transparent;\n                  border: 1px solid #8c8c8c;\n                  color: #8c8c8c;\n\n                  &:hover {\n                    border: 1px solid #666;\n                    color: #fff !important;\n                    background-color: #666;\n                    text-decoration: none;\n                  }\n                }\n\n                .btn-danger {\n                  border: 1px solid #e1251b;\n                  color: #e1251b;\n\n                  &:hover {\n                    border: 1px solid #e1251b;\n                    background-color: #e1251b;\n                    color: white !important;\n                    text-decoration: none;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      .page {\n        width: 733px;\n        height: 66px;\n        overflow: hidden;\n        float: right;\n\n        .sui-pagination {\n          margin: 18px 0;\n\n          ul {\n            margin-left: 0;\n            margin-bottom: 0;\n            vertical-align: middle;\n            width: 490px;\n            float: left;\n\n            li {\n              line-height: 18px;\n              display: inline-block;\n\n              a {\n                position: relative;\n                float: left;\n                line-height: 18px;\n                text-decoration: none;\n                background-color: #fff;\n                border: 1px solid #e0e9ee;\n                margin-left: -1px;\n                font-size: 14px;\n                padding: 9px 18px;\n                color: #333;\n              }\n\n              &.active {\n                a {\n                  background-color: #fff;\n                  color: #e1251b;\n                  border-color: #fff;\n                  cursor: default;\n                }\n              }\n\n              &.prev {\n                a {\n                  background-color: #fafafa;\n                }\n              }\n\n              &.disabled {\n                a {\n                  color: #999;\n                  cursor: default;\n                }\n              }\n\n              &.dotted {\n                span {\n                  margin-left: -1px;\n                  position: relative;\n                  float: left;\n                  line-height: 18px;\n                  text-decoration: none;\n                  background-color: #fff;\n                  font-size: 14px;\n                  border: 0;\n                  padding: 9px 18px;\n                  color: #333;\n                }\n              }\n\n              &.next {\n                a {\n                  background-color: #fafafa;\n                }\n              }\n            }\n          }\n\n          div {\n            color: #333;\n            font-size: 14px;\n            float: right;\n            width: 241px;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}