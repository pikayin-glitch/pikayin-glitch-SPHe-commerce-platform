{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/\\u5C39\\u6728\\u661F\\u8FB0/Desktop/Vue_project/Project_vue/myproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqgetCategoryList, reqGetBannerList, reqFloorList } from \"@/api\"; //home模块的仓库\n\nvar state = {\n  //home仓库中存储三级菜单的数据\n  categoryList: [],\n  //轮播图的数据\n  bannerList: [],\n  //floor组件的数据\n  floorList: []\n}; //mutions是唯一修改state的地方\n\nvar mutations = {\n  GETCATEGORYLIST: function GETCATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLIST: function GETFLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n}; //action|用户处理派发action地方的，可以书写异步语句、自己逻辑地方\n\nvar actions = {\n  getCategoryList: function getCategoryList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqgetCategoryList();\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETCATEGORYLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //获取首页轮播图的数据\n  getBannerList: function getBannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqGetBannerList();\n\n            case 3:\n              result = _context2.sent;\n\n              if (result.code == 200) {\n                commit(\"GETBANNERLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //获取floor数据\n  getFloorList: function getFloorList(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqFloorList();\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.code == 200) {\n                //提交mutation\n                commit(\"GETFLOORLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n}; //计算属性\n\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["C:/Users/尹木星辰/Desktop/Vue_project/Project_vue/myproject/src/store/home.js"],"names":["reqgetCategoryList","reqGetBannerList","reqFloorList","state","categoryList","bannerList","floorList","mutations","GETCATEGORYLIST","GETBANNERLIST","GETFLOORLIST","actions","getCategoryList","commit","result","code","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA,SAASA,kBAAT,EAA6BC,gBAA7B,EAA+CC,YAA/C,QAAmE,OAAnE,C,CACA;;AACA,IAAMC,KAAK,GAAG;AACZ;AACAC,EAAAA,YAAY,EAAE,EAFF;AAGZ;AACAC,EAAAA,UAAU,EAAE,EAJA;AAKZ;AACAC,EAAAA,SAAS,EAAC;AANE,CAAd,C,CAQA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,eADgB,2BACAL,KADA,EACOC,YADP,EACqB;AACnCD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACD,GAHe;AAIhBK,EAAAA,aAJgB,yBAIFN,KAJE,EAIKE,UAJL,EAIiB;AAC/BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACD,GANe;AAOhBK,EAAAA,YAPgB,wBAOHP,KAPG,EAOGG,SAPH,EAOa;AAC1BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACF;AATe,CAAlB,C,CAWA;;AACA,IAAMK,OAAO,GAAG;AACRC,EAAAA,eADQ,iCACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBAGbb,kBAAkB,EAHL;;AAAA;AAG5Bc,cAAAA,MAH4B;;AAIhC,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACtBF,gBAAAA,MAAM,CAAC,iBAAD,EAAoBC,MAAM,CAACE,IAA3B,CAAN;AACD;;AAN+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOjC,GARa;AASd;AACMC,EAAAA,aAVQ,gCAUkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVJ,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACXZ,gBAAgB,EADL;;AAAA;AAC1Ba,cAAAA,MAD0B;;AAE9B,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACtBF,gBAAAA,MAAM,CAAC,eAAD,EAAkBC,MAAM,CAACE,IAAzB,CAAN;AACD;;AAJ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK/B,GAfa;AAgBd;AACME,EAAAA,YAjBQ,+BAiBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVL,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACVX,YAAY,EADF;;AAAA;AACzBY,cAAAA,MADyB;;AAE7B,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACtB;AACAF,gBAAAA,MAAM,CAAC,cAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACD;;AAL4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM9B;AAvBa,CAAhB,C,CAyBA;;AACA,IAAMG,OAAO,GAAG,EAAhB;AACA,eAAe;AACbhB,EAAAA,KAAK,EAALA,KADa;AAEbI,EAAAA,SAAS,EAATA,SAFa;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbQ,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqgetCategoryList, reqGetBannerList, reqFloorList } from \"@/api\";\n//home模块的仓库\nconst state = {\n  //home仓库中存储三级菜单的数据\n  categoryList: [],\n  //轮播图的数据\n  bannerList: [],\n  //floor组件的数据\n  floorList:[]\n};\n//mutions是唯一修改state的地方\nconst mutations = {\n  GETCATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLIST(state,floorList){\n     state.floorList = floorList;\n  }\n};\n//action|用户处理派发action地方的，可以书写异步语句、自己逻辑地方\nconst actions = {\n  async getCategoryList({ commit }) {\n    //reqgetCategoryList返回的是一个Promise对象\n    //需要用await接受成功返回的结果，await必须要结合async一起使用（CP）\n    let result = await reqgetCategoryList();\n    if (result.code == 200) {\n      commit(\"GETCATEGORYLIST\", result.data);\n    }\n  },\n  //获取首页轮播图的数据\n  async getBannerList({ commit }) {\n    let result = await reqGetBannerList();\n    if (result.code == 200) {\n      commit(\"GETBANNERLIST\", result.data);\n    }\n  },\n  //获取floor数据\n  async getFloorList({ commit }) {\n    let result = await reqFloorList();\n    if (result.code == 200) {\n      //提交mutation\n      commit(\"GETFLOORLIST\", result.data);\n    }\n  },\n};\n//计算属性\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]},"metadata":{},"sourceType":"module"}