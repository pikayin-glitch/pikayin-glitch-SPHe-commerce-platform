{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Event1 from './Event1.vue';\nimport Event2 from './Event2.vue';\nexport default {\n  name: 'EventTest',\n  components: {\n    Event1: Event1,\n    Event2: Event2\n  },\n  methods: {\n    //原生DOM事件的回调\n    handler: function handler(event) {\n      console.log(event);\n    },\n    handler1: function handler1() {\n      console.log('66666666');\n    },\n    handler2: function handler2(params) {\n      console.log(params);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAiBA;AACA;AAEA;AACAA,mBADA;AAGAC;AACAC,kBADA;AAEAC;AAFA,GAHA;AAQAC;AACA;AACAC,WAFA,mBAEAC,KAFA,EAEA;AACAC;AACA,KAJA;AAKAC,YALA,sBAKA;AACAD;AACA,KAPA;AAQAE,YARA,oBAQAC,MARA,EAQA;AACAH;AACA;AAVA;AARA","names":["name","components","Event1","Event2","methods","handler","event","console","handler1","handler2","params"],"sourceRoot":"src/pages/Communication/EventTest","sources":["EventTest.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>EventTest组件</h1>\n    <!-- 原生DOM事件 -->\n    <button @click=\"handler\">原生btn按钮</button>\n    <!-- 使用Event1组件：底下这个组件  @click.native 原生DOM事件，利用事件的委派-->\n    <Event1 @click.native=\"handler1\"></Event1>\n    <hr/>\n    <!-- 自定义事件对于原生DOM没有任何意义 -->\n    <!-- <button @erha=\"handler3\"> 原生的btn</button> -->\n    <Event2 @click=\"handler2\" @xxx=\"handler2\"></Event2>\n    <!-- 表单元素 color:选取颜色  range：范围条 date：日历 week-->\n    <input type=\"week\" />\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import Event1 from './Event1.vue'\n  import Event2 from './Event2.vue'\n\n  export default {\n    name: 'EventTest',\n\n    components: {\n      Event1,\n      Event2,\n    },\n\n    methods: {\n      //原生DOM事件的回调\n      handler(event){\n        console.log(event);\n      },\n      handler1(){\n        console.log('66666666');\n      },\n      handler2(params){\n       console.log(params);\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}