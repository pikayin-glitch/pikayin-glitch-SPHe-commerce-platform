{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/\\u5C39\\u6728\\u661F\\u8FB0/Desktop/Vue_project/Project_vue/myproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGetSearchInfo } from \"@/api\"; //search模块的仓库\n\nvar state = {\n  //仓库初始状态\n  searchList: {}\n};\nvar mutations = {\n  GETSEARCHLIST: function GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n};\nvar actions = {\n  //获取search模块数据\n  getSearchList: function getSearchList(_ref) {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, params, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              params = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n              _context.next = 4;\n              return reqGetSearchInfo(params);\n\n            case 4:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETSEARCHLIST\", result.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n}; //计算属性\n//项目当中getters主要的作用是:简化仓库中的数据(简化数据而生)\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\n\nvar getters = {\n  //当前形参state，当前仓库中的state，并非大仓库中的那个state\n  goodsList: function goodsList(state) {\n    //state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\n    //假如网络不给力|没有网state.searchList.goodsList应该返回的是undefined\n    //计算新的属性的属性值至少给人家来一个数组\n    return state.searchList.goodsList || [];\n  },\n  trademarkList: function trademarkList(state) {\n    return state.searchList.trademarkList || [];\n  },\n  attrsList: function attrsList(state) {\n    return state.searchList.attrsList || [];\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["C:/Users/尹木星辰/Desktop/Vue_project/Project_vue/myproject/src/store/search.js"],"names":["reqGetSearchInfo","state","searchList","mutations","GETSEARCHLIST","actions","getSearchList","commit","params","result","code","data","getters","goodsList","trademarkList","attrsList"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,OAAjC,C,CACA;;AACA,IAAMC,KAAK,GAAG;AACV;AACAC,EAAAA,UAAU,EAAC;AAFD,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,aADgB,yBACFH,KADE,EACKC,UADL,EACiB;AAC/BD,IAAAA,KAAK,CAACC,UAAN,GAAmBA,UAAnB;AACD;AAHe,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACd;AACMC,EAAAA,aAFQ,+BAE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,cAAAA,MAAuB,QAAvBA,MAAuB;AAAbC,cAAAA,MAAa,0EAAJ,EAAI;AAAA;AAAA,qBAGxBR,gBAAgB,CAACQ,MAAD,CAHQ;;AAAA;AAGvCC,cAAAA,MAHuC;;AAI3C,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACtBH,gBAAAA,MAAM,CAAC,eAAD,EAAkBE,MAAM,CAACE,IAAzB,CAAN;AACD;;AAN0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5C;AATa,CAAhB,C,CAWA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG;AACb;AACAC,EAAAA,SAFa,qBAEHZ,KAFG,EAEG;AACd;AACA;AACA;AACA,WAAOA,KAAK,CAACC,UAAN,CAAiBW,SAAjB,IAA4B,EAAnC;AACD,GAPY;AASbC,EAAAA,aATa,yBASCb,KATD,EASO;AAClB,WAAOA,KAAK,CAACC,UAAN,CAAiBY,aAAjB,IAAgC,EAAvC;AACD,GAXY;AAYbC,EAAAA,SAZa,qBAYHd,KAZG,EAYG;AACd,WAAOA,KAAK,CAACC,UAAN,CAAiBa,SAAjB,IAA4B,EAAnC;AACD;AAdY,CAAhB;AAgBA,eAAe;AACbd,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbO,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqGetSearchInfo } from \"@/api\";\n//search模块的仓库\nconst state = {\n    //仓库初始状态\n    searchList:{}\n};\nconst mutations = {\n  GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  },\n};\nconst actions = {\n  //获取search模块数据\n  async getSearchList({ commit }, params = {}) {\n    //当前这个reqGetSearchInfo这个函数在调用获取服务器数据的时候，至少传递一个参数（空对象）\n    //params形参：是当用户派发action的时候，第二个参数传递过来的，至少是一个空对象\n    let result = await reqGetSearchInfo(params);\n    if (result.code == 200) {\n      commit(\"GETSEARCHLIST\", result.data);\n    }\n  },\n};\n//计算属性\n//项目当中getters主要的作用是:简化仓库中的数据(简化数据而生)\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\nconst getters = {\n   //当前形参state，当前仓库中的state，并非大仓库中的那个state\n   goodsList(state){\n     //state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\n     //假如网络不给力|没有网state.searchList.goodsList应该返回的是undefined\n     //计算新的属性的属性值至少给人家来一个数组\n     return state.searchList.goodsList||[];\n   }\n   ,\n   trademarkList(state){\n     return state.searchList.trademarkList||[];\n   },\n   attrsList(state){\n     return state.searchList.attrsList||[];\n   }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]},"metadata":{},"sourceType":"module"}