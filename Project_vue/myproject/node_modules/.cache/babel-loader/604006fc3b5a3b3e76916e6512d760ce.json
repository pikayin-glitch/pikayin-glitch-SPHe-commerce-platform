{"ast":null,"code":"import _objectSpread from \"C:/Users/\\u5C39\\u6728\\u661F\\u8FB0/Desktop/Vue_project/Project_vue/myproject/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\"; //引入lodash:是把lodash全部封装好的函数全都引入进来了\n//按需引入：只是引入节流函数，其他的函数没有引入（模块），这样做的好处是，当你打包项目的时候体积会小一些\n\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"typeNav\",\n  data: function data() {\n    return {\n      //当前这个属性决定了到底那个h3身上有类名\n      currentIndex: -1,\n      show: true\n    };\n  },\n  //发请求经常在mounted生命周期函数中进行\n  //组件挂载完毕\n  mounted: function mounted() {\n    //当组件挂载完毕，让show属性变为false\n    //如果不是Home路由组件，将typeNav进行隐藏\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  },\n  //计算属性\n  computed: _objectSpread({}, mapState({\n    categoryList: function categoryList(state) {\n      return state.home.categoryList;\n    }\n  })),\n  methods: {\n    //用于修改组件实例身上的currentIndex的属性值\n    //当用户鼠标移入到h3身上的时候就会立即出发一次\n    changeIndex: throttle(function (index) {\n      //修改当前currentIndex索引值\n      //函数节流:在20MS时间之内只能执行一次\n      this.currentIndex = index;\n    }, 20),\n    //进行路由跳转的回调函数\n    goSearch: function goSearch(event) {\n      //event.target:获取到的是出发事件的元素(div、h3、a、em、dt、dl)\n      var node = event.target; //给a标签添加自定义属性data-categoryName,全部的字标签当中只有a标签带有自定义属性，别的标签名字----dataset纯属扯淡\n\n      var _node$dataset = node.dataset,\n          categoryname = _node$dataset.categoryname,\n          category1id = _node$dataset.category1id,\n          category2id = _node$dataset.category2id,\n          category3id = _node$dataset.category3id; //第二个问题解决了：点击的到底是不是a标签（只要这个标签身上带有categoryname）一定是a标签\n      //当前这个if语句：一定是a标签才会进入\n\n      if (categoryname) {\n        //准备路由跳转的参数对象\n        var loction = {\n          name: \"search\"\n        };\n        var query = {\n          categoryName: categoryname\n        }; //一定是a标签：一级目录\n\n        if (category1id) {\n          query.category1Id = category1id; //一定是a标签：二级目录\n        } else if (category2id) {\n          query.category2Id = category2id; //一定是a标签：三级目录\n        } else {\n          query.category3Id = category3id;\n        } //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\n\n\n        if (this.$route.params) {\n          loction.params = this.$route.params; //动态给location配置对象添加query属性\n\n          loction.query = query; //路由跳转\n\n          this.$router.push(loction);\n        }\n      }\n    },\n    //当鼠标移入的时候，让商品分类列表进行展示\n    enterShow: function enterShow() {\n      if (this.$route.path != \"/home\") {\n        this.show = true;\n      }\n    },\n    //当鼠标离开的时候，让商品分类列表进行隐藏\n    leaveShow: function leaveShow() {\n      this.currentIndex = -1; //判断如果是Search路由组件的时候才会执行\n\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,gC,CACA;AACA;;AACA;AACA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,sBAFA;AAGAC;AAHA;AAKA,GARA;AASA;AACA;AACAC,SAXA,qBAWA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBA;AAkBA;AACAC,8BAEAC;AACAC;AAAA;AAAA;AADA,IAFA,CAnBA;AAyBAC;AACA;AACA;AACAC;AACA;AACA;AACA;AACA,KAJA,EAIA,EAJA,CAHA;AAQA;AACAC,YATA,oBASAC,KATA,EASA;AACA;AACA,8BAFA,CAGA;;AACA,0BAKAC,YALA;AAAA,UACAC,YADA,iBACAA,YADA;AAAA,UAEAC,WAFA,iBAEAA,WAFA;AAAA,UAGAC,WAHA,iBAGAA,WAHA;AAAA,UAIAC,WAJA,iBAIAA,WAJA,CAJA,CAUA;AACA;;AACA;AACA;AACA;AAAAhB;AAAA;AACA;AAAAiB;AAAA,UAHA,CAIA;;AACA;AACAC,0CADA,CAEA;AACA,SAHA,MAGA;AACAA,0CADA,CAEA;AACA,SAHA,MAGA;AACAA;AACA,SAbA,CAcA;;;AACA;AACAC,8CADA,CAEA;;AACAA,gCAHA,CAIA;;AACA;AACA;AACA;AACA,KA5CA;AA6CA;AACAC,aA9CA,uBA8CA;AACA;AACA;AACA;AACA,KAlDA;AAmDA;AACAC,aApDA,uBAoDA;AACA,6BADA,CAEA;;AACA;AACA;AACA;AACA;AA1DA;AAzBA","names":["name","data","currentIndex","show","mounted","computed","mapState","categoryList","methods","changeIndex","goSearch","event","node","categoryname","category1id","category2id","category3id","categoryName","query","loction","enterShow","leaveShow"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"type-nav\">\n    <div class=\"container\">\n      <div @mouseleave=\"leaveShow\" @mouseenter=\"enterShow\">\n        <h2 class=\"all\">全部商品分类</h2>\n        <!-- 过渡动画 -->\n        <transition name=\"sort\">\n          <div class=\"sort\" v-show=\"show\">\n            <div class=\"all-sort-list2\" @click=\"goSearch\">\n              <div\n                class=\"item\"\n                v-for=\"(c1, index) in categoryList\"\n                :key=\"c1.categoryId\"\n              >\n                <h3\n                  :class=\"{ cur: currentIndex == index }\"\n                  @mouseenter=\"changeIndex(index)\"\n                >\n                  <a\n                    :data-categoryName=\"c1.categoryName\"\n                    :data-category1Id=\"c1.categoryId\"\n                    >{{ c1.categoryName }}</a\n                  >\n                </h3>\n                <div\n                  class=\"item-list clearfix\"\n                  :style=\"{ display: currentIndex == index ? 'block' : 'none' }\"\n                >\n                  <div class=\"subitem\">\n                    <dl\n                      class=\"fore\"\n                      v-for=\"(c2, index) in c1.categoryChild\"\n                      :key=\"c2.categoryId\"\n                    >\n                      <dt>\n                        <a\n                          :data-categoryName=\"c2.categoryName\"\n                          :data-category2Id=\"c2.categoryId\"\n                          >{{ c2.categoryName }}</a\n                        >\n                      </dt>\n                      <dd>\n                        <em\n                          v-for=\"(c3, index) in c2.categoryChild\"\n                          :key=\"c3.categoryId\"\n                        >\n                          <a\n                            :data-categoryName=\"c3.categoryName\"\n                            :data-category3Id=\"c3.categoryId\"\n                            >{{ c3.categoryName }}</a\n                          >\n                        </em>\n                      </dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </transition>\n      </div>\n      <nav class=\"nav\">\n        <a href=\"###\">服装城</a>\n        <a href=\"###\">美妆馆</a>\n        <a href=\"###\">尚品汇超市</a>\n        <a href=\"###\">全球购</a>\n        <a href=\"###\">闪购</a>\n        <a href=\"###\">团购</a>\n        <a href=\"###\">有趣</a>\n        <a href=\"###\">秒杀</a>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n//引入lodash:是把lodash全部封装好的函数全都引入进来了\n//按需引入：只是引入节流函数，其他的函数没有引入（模块），这样做的好处是，当你打包项目的时候体积会小一些\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"typeNav\",\n  data() {\n    return {\n      //当前这个属性决定了到底那个h3身上有类名\n      currentIndex: -1,\n      show: true,\n    };\n  },\n  //发请求经常在mounted生命周期函数中进行\n  //组件挂载完毕\n  mounted() {\n    //当组件挂载完毕，让show属性变为false\n    //如果不是Home路由组件，将typeNav进行隐藏\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  },\n  //计算属性\n  computed: {\n    //state:他是咱们大仓库中的state（包含home|search）\n    ...mapState({\n      categoryList: (state) => state.home.categoryList,\n    }),\n  },\n  methods: {\n    //用于修改组件实例身上的currentIndex的属性值\n    //当用户鼠标移入到h3身上的时候就会立即出发一次\n    changeIndex: throttle(function(index) {\n      //修改当前currentIndex索引值\n      //函数节流:在20MS时间之内只能执行一次\n      this.currentIndex = index;\n    }, 20),\n    //进行路由跳转的回调函数\n    goSearch(event) {\n      //event.target:获取到的是出发事件的元素(div、h3、a、em、dt、dl)\n      let node = event.target;\n      //给a标签添加自定义属性data-categoryName,全部的字标签当中只有a标签带有自定义属性，别的标签名字----dataset纯属扯淡\n      let {\n        categoryname,\n        category1id,\n        category2id,\n        category3id,\n      } = node.dataset;\n      //第二个问题解决了：点击的到底是不是a标签（只要这个标签身上带有categoryname）一定是a标签\n      //当前这个if语句：一定是a标签才会进入\n      if (categoryname) {\n        //准备路由跳转的参数对象\n        let loction = { name: \"search\" };\n        let query = { categoryName: categoryname };\n        //一定是a标签：一级目录\n        if (category1id) {\n          query.category1Id = category1id;\n          //一定是a标签：二级目录\n        } else if (category2id) {\n          query.category2Id = category2id;\n          //一定是a标签：三级目录\n        } else {\n          query.category3Id = category3id;\n        }\n        //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\n        if (this.$route.params) {\n          loction.params = this.$route.params;\n          //动态给location配置对象添加query属性\n          loction.query = query;\n          //路由跳转\n          this.$router.push(loction);\n        }\n      }\n    },\n    //当鼠标移入的时候，让商品分类列表进行展示\n    enterShow() {\n      if (this.$route.path != \"/home\") {\n        this.show = true;\n      }\n    },\n    //当鼠标离开的时候，让商品分类列表进行隐藏\n    leaveShow() {\n      this.currentIndex = -1;\n      //判断如果是Search路由组件的时候才会执行\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"less\">\n.type-nav {\n  border-bottom: 2px solid #e1251b;\n\n  .container {\n    width: 1200px;\n    margin: 0 auto;\n    display: flex;\n    position: relative;\n\n    .all {\n      width: 210px;\n      height: 45px;\n      background-color: #e1251b;\n      line-height: 45px;\n      text-align: center;\n      color: #fff;\n      font-size: 14px;\n      font-weight: bold;\n    }\n\n    .nav {\n      a {\n        height: 45px;\n        margin: 0 22px;\n        line-height: 45px;\n        font-size: 16px;\n        color: #333;\n      }\n    }\n\n    .sort {\n      position: absolute;\n      left: 0;\n      top: 45px;\n      width: 210px;\n      height: 461px;\n      position: absolute;\n      background: #fafafa;\n      z-index: 999;\n\n      .all-sort-list2 {\n        .item {\n          h3 {\n            line-height: 30px;\n            font-size: 14px;\n            font-weight: 400;\n            overflow: hidden;\n            padding: 0 20px;\n            margin: 0;\n\n            a {\n              color: #333;\n            }\n            &.cur {\n              background: skyblue;\n            }\n          }\n\n          .item-list {\n            display: none;\n            position: absolute;\n            width: 734px;\n            min-height: 460px;\n            background: #f7f7f7;\n            left: 210px;\n            border: 1px solid #ddd;\n            top: 0;\n            z-index: 9999 !important;\n\n            .subitem {\n              float: left;\n              width: 650px;\n              padding: 0 4px 0 8px;\n\n              dl {\n                border-top: 1px solid #eee;\n                padding: 6px 0;\n                overflow: hidden;\n                zoom: 1;\n\n                &.fore {\n                  border-top: 0;\n                }\n\n                dt {\n                  float: left;\n                  width: 54px;\n                  line-height: 22px;\n                  text-align: right;\n                  padding: 3px 6px 0 0;\n                  font-weight: 700;\n                }\n\n                dd {\n                  float: left;\n                  width: 415px;\n                  padding: 3px 0 0;\n                  overflow: hidden;\n\n                  em {\n                    float: left;\n                    height: 14px;\n                    line-height: 14px;\n                    padding: 0 8px;\n                    margin-top: 5px;\n                    border-left: 1px solid #ccc;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    //过渡动画的样式\n    //过渡动画开始状态（进入）\n    .sort-enter {\n      height: 0px;\n    }\n    // 过渡动画结束状态（进入）\n    .sort-enter-to {\n      height: 461px;\n    }\n    // 定义动画时间、速率\n    .sort-enter-active {\n      transition: all 0.5s linear;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}