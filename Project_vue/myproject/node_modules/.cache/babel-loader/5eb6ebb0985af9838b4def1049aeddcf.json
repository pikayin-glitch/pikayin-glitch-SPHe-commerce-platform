{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/\\u5C39\\u6728\\u661F\\u8FB0/Desktop/Vue_project/Project_vue/myproject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo, reqLogout } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\"; //登录与注册的模块\n\nvar state = {\n  code: \"\",\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  //清除本地数据\n  CLEAR: function CLEAR(state) {\n    //帮仓库中先关用户信息清空\n    state.token = '';\n    state.userInfo = {}; //本地存储数据清空\n\n    removeToken();\n  }\n};\nvar actions = {\n  //获取验证码\n  getCode: function getCode(_ref, phone) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit(\"GETCODE\", result.data);\n              return _context.abrupt(\"return\", \"ok\");\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //用户注册\n  userRegister: function userRegister(_ref2, user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"ok\");\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //登录业务\n  userLogin: function userLogin(_ref3, data) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              //用户已经登录成功且获取到token\n              commit(\"USERLOGIN\", result.data.token); //持久化存储token\n\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", \"ok\");\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //获取用户信息\n  getUserInfo: function getUserInfo(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 9;\n                break;\n              }\n\n              //提交用户信息\n              commit(\"GETUSERINFO\", result.data);\n              return _context4.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  //退出登录\n  userLogout: function userLogout(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogout();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 9;\n                break;\n              }\n\n              commit(\"CLEAR\");\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["C:/Users/尹木星辰/Desktop/Vue_project/Project_vue/myproject/src/store/user.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","phone","commit","result","data","Promise","reject","Error","userRegister","user","userLogin","getUserInfo","userLogout","getters"],"mappings":"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","sourcesContent":["import {\n  reqGetCode,\n  reqUserRegister,\n  reqUserLogin,\n  reqUserInfo,\n  reqLogout,\n} from \"@/api\";\nimport { setToken, getToken,removeToken} from \"@/utils/token\";\n//登录与注册的模块\nconst state = {\n  code: \"\",\n  token: getToken(),\n  userInfo: {},\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  //清除本地数据\n  CLEAR(state){\n    //帮仓库中先关用户信息清空\n    state.token = '';\n    state.userInfo={};\n    //本地存储数据清空\n    removeToken();\n  }\n};\nconst actions = {\n  //获取验证码\n  async getCode({ commit }, phone) {\n    //获取验证码的这个接口：把验证码返回，但是正常情况，后台把验证码发到用户手机上【省钱】\n    let result = await reqGetCode(phone);\n    if (result.code == 200) {\n      commit(\"GETCODE\", result.data);\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //用户注册\n  async userRegister({ commit }, user) {\n    let result = await reqUserRegister(user);\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //登录业务\n  async userLogin({ commit }, data) {\n    let result = await reqUserLogin(data);\n    //服务器下发token，用户唯一标识符(uuid)\n    //将来经常通过带token找服务器要用户信息进行展示\n    if (result.code == 200) {\n      //用户已经登录成功且获取到token\n      commit(\"USERLOGIN\", result.data.token);\n      //持久化存储token\n      setToken(result.data.token);\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error(\"faile\"));\n    }\n  },\n  //获取用户信息\n  async getUserInfo({ commit }) {\n    let result = await reqUserInfo();\n    if (result.code == 200) {\n      //提交用户信息\n      commit(\"GETUSERINFO\", result.data);\n      return 'ok';\n    }else{\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  //退出登录\n  async userLogout({commit}) {\n    //只是向服务器发起一次请求，通知服务器清除token\n    let result = await reqLogout();\n    //action里面不能操作state，提交mutation修改state\n    if(result.code==200){\n      commit(\"CLEAR\");\n      return 'ok';\n    }else{\n      return Promise.reject(new Error('faile'));\n    }\n  },\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]},"metadata":{},"sourceType":"module"}