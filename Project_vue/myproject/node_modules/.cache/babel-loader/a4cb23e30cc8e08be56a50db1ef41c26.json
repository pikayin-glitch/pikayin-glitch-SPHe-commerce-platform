{"ast":null,"code":"import \"C:\\\\Users\\\\\\u5C39\\u6728\\u661F\\u8FB0\\\\Desktop\\\\Vue_project\\\\Project_vue\\\\myproject\\\\node_modules\\\\core-js\\\\modules\\\\es.array.iterator.js\";\nimport \"C:\\\\Users\\\\\\u5C39\\u6728\\u661F\\u8FB0\\\\Desktop\\\\Vue_project\\\\Project_vue\\\\myproject\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.js\";\nimport \"C:\\\\Users\\\\\\u5C39\\u6728\\u661F\\u8FB0\\\\Desktop\\\\Vue_project\\\\Project_vue\\\\myproject\\\\node_modules\\\\core-js\\\\modules\\\\es.object.assign.js\";\nimport \"C:\\\\Users\\\\\\u5C39\\u6728\\u661F\\u8FB0\\\\Desktop\\\\Vue_project\\\\Project_vue\\\\myproject\\\\node_modules\\\\core-js\\\\modules\\\\es.promise.finally.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from \"vue\";\nimport App from \"./App.vue\"; //引入路由相关文件\n\nimport router from \"@/router\"; //引入仓库进行注册\n\nimport store from \"@/store\"; //定义全局组件：在入口文件注册一次之后，在任何组件当中都可以使用\n\nimport typeNav from \"@/components/TypeNav\";\nimport Carsousel from \"@/components/Carousel\";\nimport Pagination from '@/components/Pagination';\nimport { Button, MessageBox } from 'element-ui'; //全局组件：第一个参数 组件名字  第二个参数：那个组件\n\nVue.component(typeNav.name, typeNav);\nVue.component(Carsousel.name, Carsousel);\nVue.component(Pagination.name, Pagination); //注册全局组件\n\nVue.component(Button.name, Button); //ElementUI注册组件的时候，还有一种写法，挂在原型上\n\nVue.prototype.$msgbox = MessageBox;\nVue.prototype.$alert = MessageBox.alert; //引入MockServer.js----mock数据\n\nimport \"@/mock/mockServe\"; //引入swiper样式\n\nimport \"swiper/css/swiper.css\"; //统一接口api文件夹里面全部请求函数\n//统一引入\n\nimport * as API from '@/api';\nimport atm from '@/assets/1.gif'; //引入插件\n\nimport VueLazyload from 'vue-lazyload'; //注册插件\n\nVue.use(VueLazyload, {\n  //懒加载默认的图片\n  loading: atm\n}); //引入自定义插件\n\nimport myPlugins from '@/plugins/myPlugins';\nVue.use(myPlugins, {\n  name: 'upper'\n}); //引入表单校验插件\n\nimport \"@/plugins/validate\";\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  },\n  //全局事件总线$bus配置\n  beforeCreate: function beforeCreate() {\n    Vue.prototype.$bus = this;\n    Vue.prototype.$API = API;\n  },\n  //需要把router进行注册\n  //可以让全部的组件（非路由|路由组件）都可以获取到$route|$router属性\n  //$route(路由)：可以获取到路由信息（path、query、params）\n  //$router:进行编程式导航路由跳转push||replace\n  router: router,\n  //在入口文件这里注册store,在每一个组件的身上都拥有一个$store这个属性\n  store: store\n}).$mount(\"#app\");","map":{"version":3,"sources":["C:/Users/尹木星辰/Desktop/Vue_project/Project_vue/myproject/src/main.js"],"names":["Vue","App","router","store","typeNav","Carsousel","Pagination","Button","MessageBox","component","name","prototype","$msgbox","$alert","alert","API","atm","VueLazyload","use","loading","myPlugins","render","h","beforeCreate","$bus","$API","$mount"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,MAAT,EAAgBC,UAAhB,QAAiC,YAAjC,C,CACA;;AACAR,GAAG,CAACS,SAAJ,CAAcL,OAAO,CAACM,IAAtB,EAA4BN,OAA5B;AACAJ,GAAG,CAACS,SAAJ,CAAcJ,SAAS,CAACK,IAAxB,EAA8BL,SAA9B;AACAL,GAAG,CAACS,SAAJ,CAAcH,UAAU,CAACI,IAAzB,EAA8BJ,UAA9B,E,CACA;;AACAN,GAAG,CAACS,SAAJ,CAAcF,MAAM,CAACG,IAArB,EAA0BH,MAA1B,E,CACA;;AACAP,GAAG,CAACW,SAAJ,CAAcC,OAAd,GAAwBJ,UAAxB;AACAR,GAAG,CAACW,SAAJ,CAAcE,MAAd,GAAuBL,UAAU,CAACM,KAAlC,C,CACA;;AACA,OAAO,kBAAP,C,CACA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,OAAOC,GAAP,MAAgB,gBAAhB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;;AACAjB,GAAG,CAACkB,GAAJ,CAAQD,WAAR,EAAoB;AAClB;AACAE,EAAAA,OAAO,EAACH;AAFU,CAApB,E,CAIA;;AACA,OAAOI,SAAP,MAAsB,qBAAtB;AACApB,GAAG,CAACkB,GAAJ,CAAQE,SAAR,EAAkB;AACdV,EAAAA,IAAI,EAAC;AADS,CAAlB,E,CAIA;;AACA,OAAO,oBAAP;AACA,IAAIV,GAAJ,CAAQ;AACNqB,EAAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,WAAOA,CAAC,CAACrB,GAAD,CAAR;AAAA,GADF;AAEN;AACAsB,EAAAA,YAHM,0BAGS;AACbvB,IAAAA,GAAG,CAACW,SAAJ,CAAca,IAAd,GAAqB,IAArB;AACAxB,IAAAA,GAAG,CAACW,SAAJ,CAAcc,IAAd,GAAqBV,GAArB;AACD,GANK;AAON;AACA;AACA;AACA;AACAb,EAAAA,MAAM,EAANA,MAXM;AAYN;AACAC,EAAAA,KAAK,EAALA;AAbM,CAAR,EAcGuB,MAdH,CAcU,MAdV","sourcesContent":["import Vue from \"vue\";\nimport App from \"./App.vue\";\n//引入路由相关文件\nimport router from \"@/router\";\n//引入仓库进行注册\nimport store from \"@/store\";\n//定义全局组件：在入口文件注册一次之后，在任何组件当中都可以使用\nimport typeNav from \"@/components/TypeNav\";\nimport Carsousel from \"@/components/Carousel\";\nimport Pagination from '@/components/Pagination'\nimport { Button,MessageBox} from 'element-ui';\n//全局组件：第一个参数 组件名字  第二个参数：那个组件\nVue.component(typeNav.name, typeNav);\nVue.component(Carsousel.name, Carsousel);\nVue.component(Pagination.name,Pagination);\n//注册全局组件\nVue.component(Button.name,Button);\n//ElementUI注册组件的时候，还有一种写法，挂在原型上\nVue.prototype.$msgbox = MessageBox;\nVue.prototype.$alert = MessageBox.alert;\n//引入MockServer.js----mock数据\nimport \"@/mock/mockServe\";\n//引入swiper样式\nimport \"swiper/css/swiper.css\";\n//统一接口api文件夹里面全部请求函数\n//统一引入\nimport * as API from '@/api';\nimport atm from '@/assets/1.gif';\n//引入插件\nimport VueLazyload from 'vue-lazyload';\n//注册插件\nVue.use(VueLazyload,{\n  //懒加载默认的图片\n  loading:atm\n});\n//引入自定义插件\nimport myPlugins from '@/plugins/myPlugins';\nVue.use(myPlugins,{\n    name:'upper'\n});\n\n//引入表单校验插件\nimport \"@/plugins/validate\";\nnew Vue({\n  render: (h) => h(App),\n  //全局事件总线$bus配置\n  beforeCreate() {\n    Vue.prototype.$bus = this;\n    Vue.prototype.$API = API;\n  },\n  //需要把router进行注册\n  //可以让全部的组件（非路由|路由组件）都可以获取到$route|$router属性\n  //$route(路由)：可以获取到路由信息（path、query、params）\n  //$router:进行编程式导航路由跳转push||replace\n  router,\n  //在入口文件这里注册store,在每一个组件的身上都拥有一个$store这个属性\n  store,\n}).$mount(\"#app\");\n"]},"metadata":{},"sourceType":"module"}